# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - release/*

variables:
  - group: homolog-6-group
  - name: projectName
    value: wp_ks
  - name: projectType
    value: wordpress
  - name: projectURL
    value: wp_ks
  - name: shouldRunCompose
    value: false


pool:
  vmImage: 'ubuntu-latest'

steps:

  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: true  # whether to fetch clean each time
    submodules: false  # set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules
    path: '*'  # path to check out source code, relative to the agent's build directory (e.g. \_work\1)
    persistCredentials: true  # set to 'true' to leave the OAuth token in the Git config after the initial fetch

  - script: echo Publicando $(projectName); echo /home/azure_ci/commands/publish_repo_tunnel.sh -c $(shouldRunCompose) -n $(projectName) -u "$(projectURL)"  -t $(projectType) -p "$(System.TeamProject)" -b release/$(Build.SourceBranchName)
    displayName: 'Run a one-line script'

  - task: SSH@0
    inputs:
      sshEndpoint: 'CI_tunnel'
      runOptions: 'inline'
      inline: |
        echo /home/azure_ci/commands/publish_repo_tunnel.sh -c $(shouldRunCompose) -n $(projectName) -u "$(projectURL)"  -t $(projectType) -p "$(System.TeamProject)" -b release/$(Build.SourceBranchName)
        ssh azure_ci@connect.h7.homolog.inf.br "echo \"\" > /home/azure_ci/out.log; echo \"\" > /home/azure_ci/err.log; /home/azure_ci/commands/publish_repo_tunnel.sh -c $(shouldRunCompose) -n $(projectName) -u \"$(projectURL)\"  -t $(projectType) -p \"$(System.TeamProject)\" -b release/$(Build.SourceBranchName) > out.log 2> err.log; echo 'Erros: ' && cat out.log; echo 'Output: ' && cat err.log"
      readyTimeout: '20000'